/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
 };
&sk {
     release-after-ms = <2000>;
     quick-release;
 };
 
/* Layers */
#define AL1 0
#define AL2 1
#define SM1 2
#define SM2 3
#define NUM 4
#define SYS 5
#define BT 6
#define FUN 7
/ { 
    combos {
        compatible = "zmk,combos";
        combo_sys {
            timeout-ms = <30>;
            key-positions = <6 7 8>;
            bindings = <&to SYS>;
        };
        combo_caps {
            timeout-ms = <30>;
            key-positions = <16 17 18>;
            bindings = <&caps_word>;
        };
        combo_num {
            timeout-ms = <30>;
            key-positions = <1 2 3>;
            bindings = <&to NUM>;
        };
        combo_bt  {
            timeout-ms = <10>;
            key-positions = <17 18>;
            bindings = <&to BT>;
            layers = <SM1>;
        };
        combo_fun  {
            timeout-ms = <10>;
            key-positions = <11 12>;
            bindings = <&to FUN>;
            layers = <AL1>;
        };
    };

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        #     hold-trigger-key-positions = <3 4 5 10 11 12 13 14>; // right hand
            hold-trigger-key-positions = <6 7 8 16 17 18 19 30>; // right hand
        };
        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_R";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        # hold-trigger-key-positions = <0 1 2 6 7 8 9>; // left hand
            hold-trigger-key-positions = < 1 2 3 10 11 12 13>; // left hand
        };
        sr: shift_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&to>;
        retro-tap;
        };
        hl_l: homerow_layers_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_L";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        # hold-trigger-key-positions = <3 4 5 10 11 12 13 14>; // right hand
            hold-trigger-key-positions = <6 7 8 16 17 18 19 30>; // right hand
        };
        hl_r: homerow_layers_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_R";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        # hold-trigger-key-positions = <0 1 2 6 7 8 9>; // left hand
            hold-trigger-key-positions = < 1 2 3 10 11 12 13>; // left hand
        };
    td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
  };

//                  0       1       2                   3       4           5
//          6       7       8       9                   10      11          12          13
//                          14      15                  16      17

//                  0       1       2      3     4	    	5	6	7	8	9
//          	   10      11       12     13	14		15	16	17	18	19
//                 20	   21	    22	   23	24              25	26	27	28	29
					   30	31		32	33
       keymap {
                compatible = "zmk,keymap";
                
                alpha1 {
                label = "Base";
        bindings = <
            &trans     &hm_l LCTL L    &hm_l LALT G    &hm_l LGUI D	&trans          &trans &hm_r RGUI H    &hm_r LALT U        &hm_r RCTL O	&trans
            &hl_l NUM I     &hl_l SM2 S     &hl_l SM1 R     &hl_l SYS T	&trans		&trans	&hl_r SYS N     &hl_r SM1 E         &hl_r SM2 A     &hl_r NUM C
	    &trans	&trans	&trans	&trans	&trans                			&trans	&trans	&trans	&trans	&trans 
                                             &kp SPC        &sk LSHIFT                  &td LC(LS(LALT)) COMMA  &mo AL2
        >;
        };
                alpha2 {
                label = "Al2";
        bindings = <
              &trans      &kp V       &kp W               &kp M &trans            &trans  &kp F       &kp SQT         &kp Z	&trans 
        &kp Q       &kp J       &kp P               &kp K &trans            &trans  &kp B       &kp DOT         &kp X       &kp Y
	    &trans	&trans	&trans	&trans	&trans                			&trans	&trans	&trans	&trans	&trans 
                                &kp SPC             &sr LSHIFT AL1      &trans      &none
        >;
        };

                sym1 {
                label = "Code";
        bindings = <
                  &trans  &kp STAR    &kp LS(N3)  &kp DLLR &trans                    &trans  &kp LS(COMMA)   &kp LS(DOT)     &kp MINUS &trans
        &kp BSLH   &kp GRAVE    &kp TILDE   &kp CARET &trans                   &trans  &kp LBKT        &kp RBKT        &kp PIPE    &kp SLASH
	    &trans	&trans	&trans	&trans	&trans                			&trans	&trans	&trans	&trans	&trans 
                                &trans      &sr LSHIFT AL1                 &kp RALT        &kp RGUI
        >;
        };
        sym2 {
        label = "Punct";
        bindings = <
                 &trans   &kp ATSN    &kp QMARK        &kp RA(N3) &trans             &trans  &kp LPRN    &kp RPRN    &kp MINUS	&trans	
        &kp SEMI    &kp PRCNT   &kp EXCL         &kp LS(MINUS) &trans          &trans  &kp LBRC    &kp RBRC    &kp AMPS    &kp COLON
	    &trans	&trans	&trans	&trans	&trans                			&trans	&trans	&trans	&trans	&trans 
                                &trans          &sr LSHIFT AL1             &kp RALT    &kp RGUI

        >;
        };

        num {
        label = "Num";
        bindings = <
                        &trans  &hm_l LCTL DOT      &hm_l LALT N0   &hm_l LGUI N1 &trans    &trans  &hm_r RGUI N2   &hm_r LALT N3    &hm_r RCTL N4	&trans
        &td SLASH MINUS   &td STAR PLUS       &kp N5          &kp N6 &trans           &trans  &kp N7          &kp N8           &kp N9         &td COLON EQUAL
	    &trans	&trans	&trans	&trans	&trans                			&trans	&trans	&trans	&trans	&trans 
                                              &trans          &sr LSHIFT AL1      &kp RALT        &kp RGUI
        >;
        };

        sys {
        label = "Nav";
        bindings = <
                          &trans  &kp ESC        &kp LG(LS(LBKT))    &kp LG(LS(RBKT)) &trans      &trans  &td LG(V) LG(C)     &td PG_UP UP    &kp BKSP	&trans
        &td LG(GRAVE) TAB   &kp DEL        &td HOME LG(LBKT)   &td END LG(RBKT) &trans      &trans  &kp LEFT            &td PG_DN DOWN  &kp RIGHT   &kp RET
	    &trans	&trans	&trans	&trans	&trans                			&trans	&trans	&trans	&trans	&trans 
                                           &kp LCTL            &sr LSHIFT AL1           &kp RALT            &kp RGUI
        >;
        };

        bt {
        label = "BT";
        bindings = <
                &trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2 &trans         &trans &bt BT_SEL 3     &bt BT_SEL 4   &trans	&trans	
        &trans    &sys_reset          &trans        &bootloader &trans         &trans  &bootloader      &trans         &sys_reset  &bt BT_CLR
	    &trans	&trans	&trans	&trans	&trans                			&trans	&trans	&trans	&trans	&trans 
                                  &none         &to AL1                &none     &none
        >;
        };
        fun {
        label = "Fn";
            bindings = <
                   &trans  &kp F11   &kp F10   &kp F1 &trans        &trans  &kp F2   &kp F3   &kp F4	&trans	
     &kp C_VOL_DN    &kp F12   &kp F5    &kp F6 &trans        &trans  &kp F7   &kp F8   &kp F9  &kp C_VOL_UP
	    &trans	&trans	&trans	&trans	&trans                			&trans	&trans	&trans	&trans	&trans 
                               &none     &to AL1          &none    &kp C_MUTE
                >;
        };
    };
};